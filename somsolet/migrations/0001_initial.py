# Generated by Django 2.2.1 on 2019-06-26 08:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=50)),
                ("date_call_for_engineerings", models.DateField(blank=True, null=True)),
                ("date_call_for_inscriptions", models.DateField(blank=True, null=True)),
                ("date_inscriptions_closed", models.DateField(blank=True, null=True)),
                (
                    "date_completed_installations",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "autonomous_community",
                    models.CharField(
                        choices=[
                            ("empty", "---"),
                            ("And", "Andalucía"),
                            ("Ar", "Aragón"),
                            ("Ast", "Principado Asturias"),
                            ("Bal", "Islas Baleares"),
                            ("Can", "Canarias"),
                            ("Cantb", "Cantabria"),
                            ("Cast-Man", "Castilla-La Mancha"),
                            ("Cast Leo", "Castila y León"),
                            ("Cat", "Cataluña"),
                            ("Ceuta", "Ceuta"),
                            ("Ext", "Extremadura"),
                            ("Gal", "Galicia"),
                            ("Val", "Comunidad Valenciana"),
                            ("Mad", "Communidad de Madrid"),
                            ("Melilla", "Melilla"),
                            ("Mur", "Región de Murcia"),
                            ("Nav", "Comunidad Foral de Navarra"),
                            ("Rio", "La Rioja"),
                            ("Vasc", "País Vasco"),
                        ],
                        default="empty",
                        max_length=50,
                    ),
                ),
                ("geographical_region", models.CharField(blank=True, max_length=50)),
                (
                    "count_completed_installations",
                    models.IntegerField(blank=True, null=True),
                ),
                ("kwp_installed", models.FloatField(blank=True, null=True)),
                ("date_warranty_payment", models.DateField(blank=True, null=True)),
                ("warranty_pending_amount", models.FloatField(blank=True, null=True)),
                ("warranty_payed_amount", models.FloatField(blank=True, null=True)),
                ("total_penalties_days", models.IntegerField(blank=True, null=True)),
                ("total_amount_penalties", models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100)),
                ("membership_number", models.CharField(blank=True, max_length=100)),
                ("dni", models.CharField(blank=True, max_length=9)),
                ("phone_number", models.CharField(blank=True, max_length=9)),
                ("email", models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Engineering",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=50)),
                ("tin", models.CharField(blank=True, max_length=9)),
                ("address", models.CharField(blank=True, max_length=100)),
                ("email", models.CharField(blank=True, max_length=50)),
                ("phone_number", models.CharField(blank=True, max_length=9)),
                ("count_closed_campaigns", models.IntegerField(blank=True, null=True)),
                ("count_open_campaigns", models.IntegerField(blank=True, null=True)),
                ("count_closed_projects", models.IntegerField(blank=True, null=True)),
                ("total_kwp_installed", models.FloatField(blank=True, null=True)),
                ("comments", models.CharField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("empty status", "---"),
                            ("preregistered", "Pre-Registered"),
                            ("registered", "Registered"),
                            ("data sent", "CCH data sent for analysis"),
                            ("technical visit", "Technical visit scheduled"),
                            ("prereport review", "Pre-Report review"),
                            ("prereport", "Pre-Report uploaded"),
                            ("report review", "Report review"),
                            ("report", "Report uploaded"),
                            ("offer", "Engeneering offer"),
                            ("offer review", "offer Review"),
                            ("signature", "Signed contract"),
                            ("construction permit", "Construction permit"),
                            ("pending installation date", "Pending installation date"),
                            ("date installation set", "Date installation set"),
                            ("installation in progress", "Installation in progress"),
                            ("installation", "Installation"),
                            ("legalization", "Legalization"),
                            ("final payment", "Final payment"),
                            ("warranty payment", "Warranty payment"),
                            ("discarded", "Discarded"),
                        ],
                        default="S0",
                        max_length=50,
                    ),
                ),
                (
                    "warning",
                    models.CharField(
                        choices=[
                            ("No Warn", "---"),
                            ("Not Payed", "Warning: Not payed"),
                            ("prereport", "Warning: Waiting for prereport"),
                            ("technical visit", "Warning: Waiting for technical visit"),
                            ("report", "Warning: Waiting for report"),
                            ("signature", "Warning: Waiting on signature"),
                        ],
                        default="No Warn",
                        max_length=100,
                    ),
                ),
                ("warning_date", models.DateField(blank=True, null=True)),
                ("preregistration_date", models.DateField(blank=True, null=True)),
                ("is_paid", models.BooleanField(default=False)),
                ("registration_date", models.DateField(blank=True, null=True)),
                ("is_data_sent", models.BooleanField(default=False)),
                ("date_prereport", models.DateField(blank=True, null=True)),
                ("is_invalid_prereport", models.BooleanField(default=False)),
                (
                    "upload_prereport",
                    models.FileField(
                        default="uploaded_files/som.png", upload_to="uploaded_files"
                    ),
                ),
                ("date_technical_visit", models.DateField(blank=True, null=True)),
                ("date_report", models.DateField(blank=True, null=True)),
                ("is_invalid_report", models.BooleanField(default=False)),
                (
                    "upload_report",
                    models.FileField(
                        default="uploaded_files/som.png", upload_to="uploaded_files"
                    ),
                ),
                ("date_offer", models.DateField(blank=True, null=True)),
                ("is_invalid_offer", models.BooleanField(default=False)),
                ("is_offer_accepted", models.BooleanField(default=False)),
                (
                    "upload_offer",
                    models.FileField(
                        default="uploaded_files/som.png", upload_to="uploaded_files"
                    ),
                ),
                ("date_signature", models.DateField(blank=True, null=True)),
                ("is_signed", models.BooleanField(default=False)),
                ("date_permit", models.DateField(blank=True, null=True)),
                (
                    "upload_permit",
                    models.FileField(
                        default="uploaded_files/som.png", upload_to="uploaded_files"
                    ),
                ),
                (
                    "discarded_type",
                    models.CharField(
                        choices=[
                            ("Not discarded", "---"),
                            ("technical", "technical"),
                            ("voluntary", "voluntary"),
                        ],
                        default="Not discarded",
                        max_length=50,
                    ),
                ),
                ("date_start_installation", models.DateField(blank=True, null=True)),
                ("is_date_set", models.BooleanField(default=False)),
                ("is_installation_in_progress", models.BooleanField(default=False)),
                ("date_legal_docs", models.DateField(blank=True, null=True)),
                ("is_payment_done", models.BooleanField(default=False)),
                ("date_payment_som", models.DateField(blank=True, null=True)),
                ("payment_pending", models.FloatField(blank=True, null=True)),
                ("final_payment", models.FloatField(blank=True, null=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="somsolet.Campaign",
                        verbose_name="Campaign",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="somsolet.Client",
                        verbose_name="Client",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfileInfo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Technical_details",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("street", models.CharField(max_length=50)),
                ("town", models.CharField(blank=True, max_length=50)),
                ("postal_code", models.CharField(blank=True, max_length=10)),
                ("contract_number", models.CharField(blank=True, max_length=10)),
                ("cups", models.CharField(max_length=22)),
                (
                    "roof_orientation",
                    models.CharField(
                        choices=[
                            ("empty", "---"),
                            ("N", "North"),
                            ("NNE", "North-northeast"),
                            ("NE", "Northeast"),
                            ("ENE", "East-northeast"),
                            ("E", "East"),
                            ("ESE", "East-southeast"),
                            ("SE", "Southeast"),
                            ("SSE", "South-southeast"),
                            ("S", "South"),
                            ("SSW", "South-southwest"),
                            ("SW", "Southwest"),
                            ("WSW", "West-southwest"),
                            ("W", "West"),
                            ("WNW", "West-northwest"),
                            ("NW", "Northwest"),
                            ("NNW", "North-northwest"),
                        ],
                        default="empty",
                        max_length=50,
                    ),
                ),
                (
                    "solar_modules_angle",
                    models.IntegerField(
                        choices=[
                            (0, 0),
                            (15, 15),
                            (30, 30),
                            (45, 45),
                            (60, 60),
                            (75, 75),
                            (90, 90),
                            (105, 105),
                            (120, 120),
                            (135, 135),
                            (150, 150),
                            (165, 165),
                            (180, 180),
                        ],
                        default=0,
                    ),
                ),
                (
                    "voltage",
                    models.CharField(
                        choices=[
                            ("empty", "---"),
                            ("1P", "single-phase"),
                            ("2P", "two-phase"),
                            ("3P", "three-phase"),
                        ],
                        default="empty",
                        max_length=50,
                    ),
                ),
                ("peak_power_panels_wp", models.FloatField(blank=True, null=True)),
                ("count_panels", models.IntegerField(blank=True, null=True)),
                ("installation_power", models.FloatField(blank=True, null=True)),
                (
                    "panel_brand",
                    models.CharField(
                        choices=[
                            ("REC", "REC"),
                            ("JA SOLAR", "JA SOLAR"),
                            ("JINKO", "JINKO"),
                            ("SOLARWATT", "SOLARWATT"),
                            ("PEIMAR", "PEIMAR"),
                            ("LUBI", "LUBI"),
                            ("ATERSA", "ATERSA"),
                            ("SUNPOWER", "SUNPOWER"),
                            ("C-SUN", "C-SUN"),
                            ("NOUSOL", "NOUSOL"),
                            ("SHARP", "SHARP"),
                            ("YINGLI", "YINGLI"),
                        ],
                        max_length=22,
                    ),
                ),
                (
                    "panel_type",
                    models.CharField(
                        choices=[("CRISTAL", "CRISTAL"), ("OTRO", "OTRO")],
                        max_length=50,
                    ),
                ),
                ("panel_model", models.CharField(max_length=22)),
                (
                    "inversor_brand",
                    models.CharField(
                        choices=[
                            ("SMA", "SMA"),
                            ("HUAWEI", "HUAWEI"),
                            ("FRONIUS", "FRONIUS"),
                            ("KOSTAL", "KOSTAL"),
                            ("VICTRON", "VICTRON"),
                            ("ENPHASE", "ENPHASE"),
                        ],
                        max_length=50,
                    ),
                ),
                ("inversor_model", models.CharField(max_length=50)),
                ("nominal_inversor_power", models.FloatField(blank=True, null=True)),
                (
                    "bateries_brand",
                    models.CharField(
                        choices=[
                            ("SONNEN", "SONNEN"),
                            ("BYD", "BYD"),
                            ("AMPERE", "AMPERE"),
                            ("LG", "LG"),
                            ("TESLA", "TESLA"),
                        ],
                        max_length=50,
                    ),
                ),
                ("bateries_model", models.CharField(max_length=50)),
                ("bateries_power", models.FloatField(blank=True, null=True)),
                ("bateries_capacity", models.FloatField(blank=True, null=True)),
                ("homemanager", models.BooleanField(default=False)),
                ("electric_car", models.BooleanField(default=False)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="somsolet.Campaign",
                        verbose_name="Campaign",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="somsolet.Client",
                        verbose_name="Client",
                    ),
                ),
                (
                    "engineering",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="somsolet.Engineering",
                        verbose_name="Engineering",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="somsolet.Project",
                        verbose_name="Project",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="campaign",
            name="engineering",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="somsolet.Engineering",
                verbose_name="Engineering",
            ),
        ),
    ]
